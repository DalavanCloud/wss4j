//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.288
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=1.0.3705.288.
// 
using System.Diagnostics;
using System.Xml.Serialization;
using System;
using System.Web.Services.Protocols;
using System.ComponentModel;
using System.Web.Services;

using Microsoft.Web.Services;


/// <remarks/>
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="LogTestServiceSoapBinding", Namespace="http://127.0.0.1:8080/axis/services/http://localhost:8080/LogTestService")]
public class JavaProxy : WebServicesClientProtocol {
    
    /// <remarks/>
    public JavaProxy() {
        this.Url = "http://localhost:8080/axis/services/http://localhost:8080/LogTestService";
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://security", ResponseNamespace="http://138.42.188.119:8080/axis/services/http://localhost:8080/LogTestService")]
    [return: System.Xml.Serialization.SoapElementAttribute("addIntReturn")]
    public int addInt(int in0, int in1) {
        object[] results = this.Invoke("addInt", new object[] {
                    in0,
                    in1});
        return ((int)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddInt(int in0, int in1, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addInt", new object[] {
                    in0,
                    in1}, callback, asyncState);
    }
    
    /// <remarks/>
    public int EndaddInt(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((int)(results[0]));
    }
}
