badAttribute = A bad attribute was specified \"{0}\"
badC14nAlgo = A bad canonicalization algorithm was specified
badElement = Bad element, expected \"{0}\" while got \"{1}\"
badEncAlgo=xenc:EncryptionMethod/@Algorithm is not supported: {0}
badEncodingType = A bad EncodingType attribute was specified \"{0}\"
badReferenceURI = Reference URI is null
badSecurityTokenReference = A bad SecurityTokenReference was specified 
badTokenType00 = Bad UsernameToken Type
badTokenType01 = Bad UsernameToken Values
badUsernameToken = An error happened processing a Username Token \"{0}\"
certpath=Error during certificate path validation: {0}
dataRef=WSSecurityEngine: DataReference - referenced data not found
decoding.divisible.four = It should be divisible by four
decoding.general = Error while decoding
decryptionCryptoClassWrong = DecryptionCryptoClass must be a sub-class of CryptoBase
decryptionCryptoFailure = DecryptionCrypto instantiation failed
decryptionKeyStoreNotSet = Decryption KeyStore is not set
duplicateError = Multiple security tokens with the same Id have been detected
encodeError = Cannot encode the certificate data
encryptionCryptoClassWrong = EncryptionCryptoClass must be a sub-class of CryptoBase
encryptionCryptoFailure = EncryptionCrypto instantiation failed
encryptionKeyMissing = The encryption key or cert is missing
encryptionKeyStoreNotSet = Encryption KeyStore is not set
error00 = Failed to load credentials.
failedAuthentication = User ({0}) not authenticated
invalidCertData = Unexpected number of certificates: {0}
invalidCertForSKI = An X509 certificate with version 3 must be used for SKI. The presented cert has version: {0}
invalidCert = The provided certificate is invalid
invalidConstructor = Token impl. class \"{0}\" does not provide appropriate constructor
invalidData=Invalid data: {0}
invalidDataRef = Cannot handle multiple data references
invalidEmbeddedRef = The embedded Reference is invalid
invalidKeySize=Invalid keysize
invalidSAMLsecurity=SAML token security failure
invalidSAMLToken = Invalid SAML assertion : {0}
invalidTimestamp=WSSecurityEngine: Invalid timestamp: {0}
invalidTokenType = Bad TokenType \"{0}\"
invalidValueType = Bad ValueType \"{0}\"
invalidX509Data = Unexpected number of X509Data: {0}
ioError00 = Failed to load credentials.
kerberosLoginError=An error occurred in trying to obtain a TGT: {0}
kerberosServiceTicketError=An error occurred in trying to obtain a service ticket
kerberosTicketValidationError=An error occurred in trying to validate a ticket
keystore = Cannot access/read keystore data
missingCreated = Created time is missing
missingNonce = Nonce is missing
missingPassword = Password is missing
missingPasswordType =Password attribute type is missing
missingSecurityHeader = Security header is missing
missingSecurityProperties = SecurityProperties must not be null!
missingUsernameToken = UsernameToken is missing
missingUsername = Username is missing
noCert = No certificate provided
noCertsFound = No certificates were found for {0}
noCipher=WSSecurityEngine: EncryptedKey does not contain xenc:CipherData/xenc:CipherValue
noCredential=WSSecurityEngine: No Credential was supplied to the Validator
noDecCryptoFile=WSSecurityEngine: No crypto property file supplied for decryption
noEncAlgo=WSSecurityEngine: xenc:EncryptedKey does not contain xenc:EncryptionMethod/@Algorithm
noEncElement=WSEncryptBody/WSSignEnvelope: Element to encrypt/sign not found: {0}
noEncKey=WSSecurityEngine: EncryptedData does not contain xenc:EncryptedKey
noEncodingType = No EncodingType attribute was specified
noEncryptedData = Referenced encrypted data could not be retrieved. Reference \"{0}\"
noEncryptionUser = Encryption user is not set
noKeyinfo=WSSecurityEngine: EncryptedKey does not contain ds:KeyInfo
noKeyInSAMLToken=Provided SAML token does not contain a suitable key
noKeyname=WSSecurityEngine: ds:KeyName does not contain a key name
noKeySupplied=WSEncryptBody: No symmetrical encryption key supplied
noKey=WSSecurityEngine: Callback supplied no key for: {0}
noOutputAction = No outgoing actions specified
noPassword=WSSecurityEngine: Callback supplied no password for: {0}
noPrivateKey = The private key for the supplied alias does not exist in the keystore
noReference = <Reference> token could not be retrieved
noReference = <Reference> token could not be retrieved
noSAMLCallbackHandler=No SAMLCallbackHandler was supplied
noSAMLdoc=Cannot convert SAML to DOM document
noSAMLVersion=No SAML Version was set on the SAMLCallback
noSecProvider = Specified security provider not available
noSecTokRef=WSSecurityEngine: EncryptedKey does not contain ds:KeyInfo/wsse:SecurityTokenReference
noSecurityTokenReference = The SecurityTokenReference was required but not found
noSigCryptoFile=WSSecurityEngine: No crypto property file supplied to verify signature
noSignatureUser = Signature user is not set
noSignResult=No SIGN result in WSS4J result vector
noSKIHandling = Problem with SKI information: {0}
notASOAPMessage = Request is not a valid SOAP Message
noToken = Reference \"{0}\"
noTokenUser = Token user is not set
noUserCertsFound = No certificates for user {0} were found for {1}
noXMLSig = Cannot setup signature data structure
parseError = Cannot parse/decode the certificate data
proxyNotFound = Proxy file ({0}) not found.
requiredElementNoID=Element {0} is not signed; it does not have a wsu:Id attribute
requiredElementNotProtected=Element {0} is not protected
requiredElementNotSigned=Element {0} is not included in the signature
resourceNotFound = Cannot load the resource {0}
secError00 = Failed to load credentials.
signatureCryptoClassWrong = SignatureCryptoClass must be a sub-class of CryptoBase
signatureCryptoFailure = SignatureCrypto instantiation failed
signatureKeyStoreNotSet = Signature KeyStore is not set
signatureVerificationCryptoClassWrong = SignatureVerificationCryptoClass must be a sub-class of CryptoBase
signatureVerificationCryptoFailure = SignatureVerificationCrypto instantiation failed
spnegoKeyError=An error occurred in trying to unwrap a SPNEGO key
unableToLoadClass=Unable to load class {0}
unhandledToken = Security token supported but currently not handled \"{0}\"
unknownAction=Unknown Action {0}
unknownSignatureAlgorithm = An unknown signature algorithm was specified: {0}
unsupportedBinaryTokenType = Token type \\"{0}\\"
unsupportedCertType = Certificate type not supported by security provider
unsupportedKeyId=Unsupported key identification: {0}
unsupportedKeyInfo = Unsupported KeyInfo type
unsupportedKeyTransp=unsupported key transport encryption algorithm: {0}
